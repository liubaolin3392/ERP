<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chinasoft.model.dao.ContractMapper" >
  <resultMap id="BaseResultMap" type="com.chinasoft.model.entity.Contract" >
    <id column="contractId" property="contractid" jdbcType="INTEGER" />
    <result column="userName" property="username" jdbcType="VARCHAR" />
    <result column="contractName" property="contractname" jdbcType="VARCHAR" />
    <result column="contractType" property="contracttype" jdbcType="VARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.chinasoft.model.entity.Contract" extends="BaseResultMap" >
    <result column="contractContect" property="contractcontect" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    contractId, userName, contractName, contractType
  </sql>
  <sql id="Blob_Column_List" >
    contractContect
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from contract
    where contractId = #{contractid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from contract
    where contractId = #{contractid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.chinasoft.model.entity.Contract" >
    insert into contract (contractId, userName, contractName, 
      contractType, contractContect)
    values (#{contractid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{contractname,jdbcType=VARCHAR}, 
      #{contracttype,jdbcType=VARCHAR}, #{contractcontect,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.chinasoft.model.entity.Contract" >
    insert into contract
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="contractid != null" >
        contractId,
      </if>
      <if test="username != null" >
        userName,
      </if>
      <if test="contractname != null" >
        contractName,
      </if>
      <if test="contracttype != null" >
        contractType,
      </if>
      <if test="contractcontect != null" >
        contractContect,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="contractid != null" >
        #{contractid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="contractname != null" >
        #{contractname,jdbcType=VARCHAR},
      </if>
      <if test="contracttype != null" >
        #{contracttype,jdbcType=VARCHAR},
      </if>
      <if test="contractcontect != null" >
        #{contractcontect,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.chinasoft.model.entity.Contract" >
    update contract
    <set >
      <if test="username != null" >
        userName = #{username,jdbcType=VARCHAR},
      </if>
      <if test="contractname != null" >
        contractName = #{contractname,jdbcType=VARCHAR},
      </if>
      <if test="contracttype != null" >
        contractType = #{contracttype,jdbcType=VARCHAR},
      </if>
      <if test="contractcontect != null" >
        contractContect = #{contractcontect,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where contractId = #{contractid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.chinasoft.model.entity.Contract" >
    update contract
    set userName = #{username,jdbcType=VARCHAR},
      contractName = #{contractname,jdbcType=VARCHAR},
      contractType = #{contracttype,jdbcType=VARCHAR},
      contractContect = #{contractcontect,jdbcType=LONGVARCHAR}
    where contractId = #{contractid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.chinasoft.model.entity.Contract" >
    update contract
    set userName = #{username,jdbcType=VARCHAR},
      contractName = #{contractname,jdbcType=VARCHAR},
      contractType = #{contracttype,jdbcType=VARCHAR}
    where contractId = #{contractid,jdbcType=INTEGER}
  </update>
</mapper>